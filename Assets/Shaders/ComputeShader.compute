// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

struct Pos
{
    float3 position;
};

#include "UnityCG.cginc"

RWStructuredBuffer<Pos> pos;



[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
  //  if (id.x > pos.Length)
   // return;

    Pos tempPos = pos[id.x];
    tempPos.position += float3(0, sin(_Time.y*3+tempPos.position.x+tempPos.position.z),0)/5000;
    pos[id.x] = tempPos;

}
